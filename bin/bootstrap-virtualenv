#!/bin/bash
#
# bootstrap-virtualenv
# ====================
#
# Copyright 2012 - John Calixto
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# -----------------------------------------------------------------
#
# Usage:  bootstrap-virtualenv [environment_name]
#
# Creates a new virtualenv named environment_name, and installs dependencies
# from requirements files using pip.
#
# If environment_name is not specified, it defaults to the value of the
# ``PROJECT_NAME`` variable below.
#

# Customize these for your project
# --------------------------------
# The project name
PROJECT_NAME="example_proj"

# A space-separated list of requirements files
REQUIREMENTS="requirements.pip"


# Everything below this line should be safe to use as-is
# ------------------------------------------------------
VENV=virtualenv
VENV_VERSION=1.11.4
VENV_SYS_VERSION=$(virtualenv --version 2>/dev/null)
VENV_PY_URL=https://pypi.python.org/packages/source/v/virtualenv/virtualenv-${VENV_VERSION}.tar.gz

here=$(cd $(dirname $0); /bin/pwd)
venv_name=${1-$PROJECT_NAME}
venv_dir=${VIRTUAL_ENV-$here/.venv-$venv_name}
bin_dir=$venv_dir/bin
activate=$bin_dir/activate
pip="$bin_dir/pip install -r"

die() {
    echo "$*"
    exit 1
}

if [ -f "$activate" ]
then
    venv_name=$(basename $venv_dir)
    venv_name=${venv_name#.venv-}
else
    venv_args="--no-site-packages --distribute --prompt=($venv_name) $venv_dir"

    if [ "${VENV_SYS_VERSION}" == "${VENV_VERSION}" ]
    then
        $VENV $venv_args || die "Could not create virtualenv"
    else
        echo "Retrieving virtualenv"
        curl -Os $VENV_PY_URL || die "Could not download virtualenv"
        tar -xzf virtualenv-${VENV_VERSION}.tar.gz || die "Failed to extract virtualenv"
        python virtualenv-${VENV_VERSION}/virtualenv.py $venv_args || die "Could not create virtualenv"
        echo "Removing virtualenv"
        rm -rf virtualenv-${VENV_VERSION} virtualenv-${VENV_VERSION}.tar.gz
    fi
fi

for req in $REQUIREMENTS
do
    [ -f "$req" ] || continue
    $pip $req || die "Could not install dependencies in $req"
done

local_link=activate-$venv_name
ln -nsf $activate $here/$local_link

echo
echo ==================================================
echo
echo Dependencies installed to:  $venv_dir
echo Activate the virtualenv by running:
echo
echo "    source $local_link"
echo
